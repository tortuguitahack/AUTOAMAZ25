{
  "metadata": {
    "version": 5,
    "name": "amzdiluz-v5-ultra",
    "description": "Flujo ATECHANY n8n ultra-pro para ventas masivas Amazon: IA, validaci칩n avanzada, logging multinivel, tracking, seguridad y distribuci칩n multicanal.",
    "author": "tortuguitahack",
    "lastUpdated": "2025-07-08"
  },
  "flow": {
    "modules": [
      {
        "id": "inputValidationModule",
        "type": "custom:validateInput",
        "parameters": {
          "requiredFields": ["name", "link", "image"],
          "fieldFormats": {
            "name": { "minLength": 3, "maxLength": 100, "regex": "^[\\w\\s치칠칤칩칰칲침츼칄칈칍칔칖칌-]+$" },
            "link": { "type": "url", "allowedDomains": ["amazon"], "regex": "amazon\\.(com|es|mx|it|fr|de|co\\.uk)/.*tag=" },
            "image": { "type": "url", "regex": "\\.(jpg|jpeg|png|webp)$" }
          },
          "antispamCheck": true,
          "customErrorMessages": {
            "name": "Nombre inv치lido. Debe tener entre 3 y 100 caracteres y solo caracteres permitidos.",
            "link": "El enlace debe ser de Amazon y contener el tag de afiliado.",
            "image": "Solo URLs de im치genes v치lidas (jpg, png, webp)."
          },
          "onError": "errorHandlerModule",
          "logOnError": true,
          "logContext": true
        }
      },
      {
        "id": "dedupeModule",
        "type": "custom:deduplicate",
        "parameters": {
          "uniqueField": "link",
          "dedupeBy": ["link", "name"],
          "antispamCheck": true,
          "logDuplicates": true,
          "onError": "errorHandlerModule"
        }
      },
      {
        "id": "googleSheetsModule",
        "type": "google-sheets:watchRows",
        "parameters": {
          "sheetId": "{{env.GOOGLE_SHEET_ID}}",
          "range": "Ecosistema Global!A2:F",
          "limit": 500,
          "validateSheet": true,
          "skipEmptyRows": true,
          "onError": "errorHandlerModule",
          "logOnError": true,
          "batchMode": true
        }
      },
      {
        "id": "gptModule",
        "type": "openai:chat-completion",
        "parameters": {
          "model": "gpt-4o",
          "prompt": "Act칰a como copywriter de 칠lite en ventas Amazon. Genera 3 descripciones hipn칩ticas, m치ximo 30 palabras, con llamado a la acci칩n y formato A/B test. Producto: {{2.name}}.",
          "max_tokens": 150,
          "wordLimit": 30,
          "n": 3,
          "retryOnFail": 5,
          "failOnWordLimitExceeded": true,
          "onError": "errorHandlerModule",
          "logPromptAndResponse": true
        }
      },
      {
        "id": "linkBuilderModule",
        "type": "tools:textAggregator",
        "parameters": {
          "template": "{{2.link}}?tag={{env.AMAZON_TAG}}&utm_source=atechany&utm_medium=ai&utm_campaign=autoaff_{{timestamp}}&utm_content={{randomString}}",
          "validateUrl": true,
          "hashTimestamp": true,
          "onError": "errorHandlerModule"
        }
      },
      {
        "id": "airtableModule",
        "type": "airtable:createRecord",
        "parameters": {
          "baseId": "{{env.AIRTABLE_BASE_ID}}",
          "tableId": "{{env.AIRTABLE_TABLE_ID}}",
          "fields": {
            "Producto": "{{2.name}}",
            "LinkAmazon": "{{5.text}}",
            "Descripci칩n GPT A": "{{4.choices[0].message.content}}",
            "Descripci칩n GPT B": "{{4.choices[1].message.content}}",
            "Descripci칩n GPT C": "{{4.choices[2].message.content}}"
          },
          "validateBeforeInsert": true,
          "preventDuplicateInsert": true,
          "onError": "errorHandlerModule",
          "logInsert": true
        }
      },
      {
        "id": "pinterestModule",
        "type": "pinterest:createPin",
        "parameters": {
          "boardId": "{{env.PINTEREST_BOARD_ID}}",
          "title": "{{2.name}}",
          "description": "{{4.choices[0].message.content}}",
          "link": "{{5.text}}",
          "imageUrl": "{{2.image}}",
          "validateImage": true,
          "validateTitleLength": true,
          "onError": "errorHandlerModule"
        }
      },
      {
        "id": "redditModule",
        "type": "reddit:submitPost",
        "parameters": {
          "subreddit": "{{env.REDDIT_SUBREDDIT}}",
          "title": "{{2.name}}",
          "content": "{{4.choices[1].message.content}}\nCompra aqu칤 游녤 {{5.text}}",
          "validateTitle": true,
          "validateContent": true,
          "onError": "errorHandlerModule"
        }
      },
      {
        "id": "telegramModule",
        "type": "telegram:sendMessage",
        "parameters": {
          "chatId": "{{env.TELEGRAM_CHANNEL_ID}}",
          "message": "游댠{{2.name}}游댠\n{{4.choices[2].message.content}}\nEnlace: {{5.text}}",
          "parseMode": "HTML",
          "onError": "errorHandlerModule"
        }
      },
      {
        "id": "notionWebhookModule",
        "type": "webhook:sendData",
        "parameters": {
          "url": "{{env.NOTION_WEBHOOK_URL}}",
          "payload": {
            "producto": "{{2.name}}",
            "mensaje": "游뚿 춰Clic detectado! Revisa en Amazon: {{5.text}}"
          },
          "validateUrl": true,
          "onError": "errorHandlerModule"
        }
      },
      {
        "id": "trackingWebhookModule",
        "type": "webhook:sendData",
        "parameters": {
          "url": "{{env.TRACKING_WEBHOOK_URL}}",
          "payload": {
            "producto": "{{2.name}}",
            "canal": "{{currentModule}}",
            "timestamp": "{{timestamp}}",
            "usuario": "{{env.MARKETER_ID}}"
          },
          "onError": "errorHandlerModule"
        }
      },
      {
        "id": "errorHandlerModule",
        "type": "custom:errorHandler",
        "parameters": {
          "logError": true,
          "notifyChannels": ["Sentry", "Discord", "Email"],
          "externalLogWebhook": "{{env.LOG_WEBHOOK}}",
          "retryOnFail": 3,
          "logContext": true,
          "maskSensitiveData": true
        }
      },
      {
        "id": "loggerModule",
        "type": "custom:logger",
        "parameters": {
          "logLevel": "auto",
          "logFields": [
            "timestamp", "module", "status", "product", "link", "error", "user", "context", "input", "output"
          ],
          "externalLog": {
            "enable": true,
            "service": "Sentry",
            "webhookUrl": "{{env.LOG_WEBHOOK}}"
          },
          "logFormat": "json"
        }
      }
    ],
    "connections": [
      { "source": "googleSheetsModule", "target": "inputValidationModule" },
      { "source": "inputValidationModule", "target": "dedupeModule" },
      { "source": "dedupeModule", "target": "gptModule" },
      { "source": "dedupeModule", "target": "linkBuilderModule" },
      { "source": "gptModule", "target": "airtableModule" },
      { "source": "linkBuilderModule", "target": "airtableModule" },
      { "source": "gptModule", "target": "pinterestModule" },
      { "source": "linkBuilderModule", "target": "pinterestModule" },
      { "source": "gptModule", "target": "redditModule" },
      { "source": "linkBuilderModule", "target": "redditModule" },
      { "source": "gptModule", "target": "telegramModule" },
      { "source": "linkBuilderModule", "target": "telegramModule" },
      { "source": "linkBuilderModule", "target": "notionWebhookModule" },
      { "source": "linkBuilderModule", "target": "trackingWebhookModule" },
      { "source": "airtableModule", "target": "loggerModule" },
      { "source": "pinterestModule", "target": "loggerModule" },
      { "source": "redditModule", "target": "loggerModule" },
      { "source": "telegramModule", "target": "loggerModule" },
      { "source": "notionWebhookModule", "target": "loggerModule" },
      { "source": "trackingWebhookModule", "target": "loggerModule" }
    ]
  }
}
